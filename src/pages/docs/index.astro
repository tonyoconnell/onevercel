---
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";
import { Book, ScrollText, ArrowRight } from "lucide-react";
import type { CollectionEntry } from "astro:content";
import { ChatConfigSchema } from '../../schema/chat';


// Get all Docs entries sorted by order and section
const entries = (await getCollection("docs"))
  .sort((a: CollectionEntry<"docs">, b: CollectionEntry<"docs">) => {
    // First sort by section
    if (a.data.section !== b.data.section) {
      return (a.data.section || "").localeCompare(b.data.section || "");
    }
    // Then by order if available
    if (a.data.order !== undefined && b.data.order !== undefined) {
      return a.data.order - b.data.order;
    }
    // Finally by date
    return new Date(b.data.date).getTime() - new Date(a.data.date).getTime();
  });

// Group entries by section
type DocsSection = Record<string, CollectionEntry<"docs">[]>;
const sections: DocsSection = entries.reduce((acc: DocsSection, entry: CollectionEntry<"docs">) => {
  const section = entry.data.section || "General";
  if (!acc[section]) {
    acc[section] = [];
  }
  acc[section].push(entry);
  return acc;
}, {} as DocsSection);

const chatConfig = ChatConfigSchema.parse({
  systemPrompt: [{
    type: "text" as const,
    text: 
`You are an expert documentation assistant for the ONE framework. Your role is to help users understand and implement ONE effectively.

Core Knowledge:
1. Framework Architecture
   - Astro-based static site generation
   - React components for interactivity
   - Assistant UI for chat interfaces
   - Vercel AI SDK for model integration
   - Edge runtime optimization

2. Technical Capabilities
   - AI-powered chat systems
   - Real-time message streaming
   - Markdown content processing
   - Dynamic page layouts
   - Edge computing features
   - TypeScript/JavaScript development

3. Chat System Features
   - Multiple panel modes (quarter, half, full, floating, icon)
   - System prompt configuration
   - Welcome screen customization
   - Message history and branching
   - Voice synthesis capabilities
   - Code syntax highlighting

4. Content Management
   - Markdown-based documentation
   - Blog system with multiple views
   - Dynamic routing
   - Asset optimization
   - SEO configuration

5. Commercial Features
   - Full commercial usage rights
   - White-label options
   - Enterprise support
   - Custom deployment options
   - No royalty fees

Response Guidelines:
1. Base responses primarily on the current page content
2. Reference related documentation when relevant
3. Provide practical code examples
4. Include implementation steps
5. Suggest best practices
6. Address common issues
7. Reference the official documentation

Remember to:
- Be accurate and technical
- Provide working code examples
- Consider performance implications
- Suggest security best practices
- Reference documentation sections
- Stay within the technical scope
- Maintain professional tone`
  }],
  welcome: {
    message: "üëã I'm the ONE documentation assistant. How can I help you understand this section better?",
    avatar: "/icon.svg",
    suggestions: [
      {
        label: "üìö Explain this page",
        prompt: "Can you explain what this documentation page covers and how it fits into the overall framework?"
      },
      {
        label: "üîç Key concepts",
        prompt: "What are the key concepts and features covered in this section?"
      },
      {
        label: "üíª Code examples",
        prompt: "Can you show me code examples for the features discussed on this page?"
      },
      {
        label: "üöÄ Implementation",
        prompt: "How do I implement these features in my project?"
      },
      {
        label: "‚ö° Best practices",
        prompt: "What are the best practices and performance considerations for this feature?"
      }
    ]
  }
});

---

<Layout
  title="Documentation - Guides and References"
  description="Explore our comprehensive documentation, guides, and references"
  chatConfig={chatConfig}
  rightPanelMode="quarter"
>
  <div class="max-w-[90rem] mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Hero Section -->
    <div class="py-12 md:py-20 text-center">
      <h1 class="text-4xl md:text-6xl font-extrabold bg-clip-text text-transparent bg-gradient-to-r from-primary via-primary/80 to-primary/60 mb-4 tracking-tight">
        Documentation
      </h1>
      <p class="text-xl text-muted-foreground max-w-2xl mx-auto">
        Everything you need to know about using our platform
      </p>
    </div>

    <!-- Documentation Sections -->
    <div class="space-y-16 max-w-[85rem] mx-auto">
      {Object.entries(sections).map(([sectionName, sectionEntries]) => (
        <section>
          <h2 class="text-2xl font-bold mb-8 flex items-center gap-2">
            <Book className="w-6 h-6 text-primary" />
            {sectionName}
          </h2>
          <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
            {sectionEntries.map((entry: CollectionEntry<"docs">) => (
              <div class="group hover:bg-muted/50 rounded-lg border border-muted/40 shadow-sm transition-all duration-200 hover:shadow-md">
                <a
                  href={`/docs/${entry.slug}`}
                  class="block p-6 h-full"
                >
                  <div class="flex items-start gap-4">
                    <div class="p-2.5 rounded-lg bg-primary/10 text-primary">
                      <ScrollText className="w-5 h-5" />
                    </div>
                    <div class="flex-1 min-w-0">
                      <h3 class="text-lg font-semibold mb-2 group-hover:text-primary transition-colors truncate">
                        {entry.data.title}
                      </h3>
                      <p class="text-muted-foreground text-sm mb-4 line-clamp-2">
                        {entry.data.description}
                      </p>
                      <div class="inline-flex items-center text-sm font-medium text-primary opacity-0 group-hover:opacity-100 transition-opacity">
                        Read More
                        <ArrowRight className="w-4 h-4 ml-1" />
                      </div>
                    </div>
                  </div>
                </a>
              </div>
            ))}
          </div>
        </section>
      ))}
    </div>
  </div>
</Layout>