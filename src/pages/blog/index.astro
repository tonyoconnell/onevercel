---
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";
import { Card } from "@/components/ui/card";
import { Calendar, Clock } from "lucide-react";
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";

// Get all Blog entries sorted by date
const entries = (await getCollection("blog"))
  .sort((a: CollectionEntry<"blog">, b: CollectionEntry<"blog">) => 
    new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
  );

function formatDate(date: Date) {
  return new Intl.DateTimeFormat("en-US", {
    year: "numeric",
    month: "short",
    day: "numeric",
  }).format(date);
}

function estimateReadingTime(text: string): number {
  const wordsPerMinute = 200;
  const words = text.trim().split(/\s+/).length;
  return Math.ceil(words / wordsPerMinute);
}
---

<Layout
  title="Blog - Latest Articles and Updates"
  description="Explore our latest articles, tutorials, and insights"
>
  <div class="max-w-[1600px] mx-auto px-4 sm:px-6 lg:px-8 pt-16 sm:pt-24 lg:pt-32 relative z-[1]">
    <!-- Featured Article -->
    {entries.length > 0 && (
      <article class="mb-12 sm:mb-16 lg:mb-24">
        <a href={`/blog/${entries[0].slug}`} class="group block relative">
          <div class="relative aspect-[16/9] sm:aspect-[21/9] w-full overflow-hidden rounded-lg sm:rounded-xl">
            {entries[0].data.picture && (
              <Image
                src={entries[0].data.picture}
                alt={entries[0].data.title}
                width={1600}
                height={686}
                quality={90}
                class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
              />
            )}
            <div class="absolute inset-0 bg-gradient-to-t from-black/95 via-black/70 to-transparent" />
          </div>
          <div class="absolute inset-0 flex flex-col justify-end p-4 sm:p-6 lg:p-12">
            <div class="relative z-10 max-w-3xl text-white space-y-3 sm:space-y-4">
              <div class="flex flex-wrap items-center gap-2 sm:gap-3">
                <div class="inline-flex items-center rounded-full border px-2.5 sm:px-3 py-1 text-xs font-semibold bg-white/20 text-white border-transparent backdrop-blur-sm">
                  {entries[0].data.type || "Blog"}
                </div>
                <span class="text-xs sm:text-sm flex items-center text-white/90 backdrop-blur-sm bg-black/20 px-2.5 sm:px-3 py-1 rounded-full">
                  <Calendar className="w-3.5 h-3.5 sm:w-4 sm:h-4 mr-1.5 text-white/70" />
                  {formatDate(new Date(entries[0].data.date))}
                </span>
                <span class="text-xs sm:text-sm flex items-center text-white/90 backdrop-blur-sm bg-black/20 px-2.5 sm:px-3 py-1 rounded-full">
                  <Clock className="w-3.5 h-3.5 sm:w-4 sm:h-4 mr-1.5 text-white/70" />
                  {estimateReadingTime(entries[0].data.description)} min read
                </span>
              </div>
              <h1 class="text-2xl sm:text-3xl lg:text-5xl font-bold !leading-snug">
                {entries[0].data.title}
              </h1>
              <p class="text-base sm:text-lg text-white/90 line-clamp-2 max-w-3xl">
                {entries[0].data.description}
              </p>
            </div>
          </div>
        </a>
      </article>
    )}

    <!-- Article Grid -->
    <div class="grid gap-8 sm:grid-cols-2 lg:grid-cols-3 relative z-[10]" transition:animate="slide">
      {entries.slice(1).map((entry: CollectionEntry<"blog">) => (
        <Card className="group overflow-hidden border-muted/50 transition-all duration-300 hover:shadow-lg hover:-translate-y-1">
          <a href={`/blog/${entry.slug}`} class="block">
            {entry.data.picture && (
              <div class="aspect-[16/9] w-full overflow-hidden">
                <Image
                  src={entry.data.picture}
                  alt={entry.data.title}
                  width={600}
                  height={338}
                  class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
                />
              </div>
            )}
            <div class="p-6">
              <div class="flex flex-wrap items-center gap-3 mb-4 text-sm">
                <div class="inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold bg-primary/10 text-primary border-transparent">
                  {entry.data.type || "Blog"}
                </div>
                <span class="text-sm flex items-center text-muted-foreground">
                  <Calendar className="w-4 h-4 mr-1.5 text-primary/60" />
                  {formatDate(new Date(entry.data.date))}
                </span>
              </div>
              <h2 class="text-xl font-bold mb-2 group-hover:text-primary transition-colors">
                {entry.data.title}
              </h2>
              <p class="text-muted-foreground line-clamp-2 mb-4">
                {entry.data.description}
              </p>
              <div class="flex items-center text-sm text-muted-foreground">
                <Clock className="w-4 h-4 mr-1.5 text-primary/60" />
                {estimateReadingTime(entry.data.description)} min read
              </div>
            </div>
          </a>
        </Card>
      ))}
    </div>
  </div>
</Layout>
