---
import Layout from "../layouts/Layout.astro";
import Stripe from "stripe";
import { Button } from "@/components/ui/button";
import { Card, CardHeader, CardContent, CardFooter } from "@/components/ui/card";
import { Check, ArrowRight, Mail, Calendar } from 'lucide-react';
import type { Stripe as StripeType } from 'stripe';
import { ChatConfigSchema } from "../schema/chat";
const rightPanelMode = "half"; // You can change this to 'full', 'half', 'floating', or 'icon'

const page = {
  title: "Thank You | ONE",
  description: "Thank you for your subscription",
  showHeader: true,
  showFooter: false,
  showSidebar: true,
  showChat: false,
  seo: {
    metaTitle: "Thank You | ONE",
    metaDescription: "Thank you for subscribing to ONE",
    metaKeywords: ["thank you", "subscription", "ONE"],
  },
};


const stripe = new Stripe(import.meta.env.STRIPE_SECRET_KEY) as StripeType;
const sessionId = Astro.url.searchParams.get('session_id');

let session;
try {
  if (!sessionId) throw new Error('No session ID provided');
  session = await stripe.checkout.sessions.retrieve(sessionId);
} catch (e) {
  return Astro.redirect('/stripe');
}

const { name, email } = session.customer_details || {};
const subscriptionId = session.subscription;

// Get detailed subscription information
let subscriptionDetails: StripeType.Subscription | undefined;
try {
  if (subscriptionId && typeof subscriptionId === 'string') {
    subscriptionDetails = await stripe.subscriptions.retrieve(subscriptionId, {
      expand: ['items.data.price.product', 'latest_invoice.payment_intent']
    });
  }
} catch (e) {
  console.error('Error fetching subscription details:', e);
}
---

<Layout
  title="ONE - Own Your AI Solutions Completely Free"
  rightPanelMode={rightPanelMode}
>
  <div class="container max-w-3xl mx-auto px-4 py-12">
    {/* Success Message */}
    <div class="text-center mb-12">
      <div class="inline-flex items-center justify-center w-16 h-16 rounded-full bg-green-100 mb-6">
        <Check className="w-8 h-8 text-green-600" />
      </div>
      <h1 class="text-4xl font-bold mb-4">Thank You for Your Subscription!</h1>
      {name && <p class="text-xl text-muted-foreground mb-2">Welcome aboard, {name}!</p>}
    </div>

    {/* Subscription Details Card */}
    <Card className="mb-8">
      <CardHeader>
        <h2 class="text-2xl font-semibold">Subscription Details</h2>
      </CardHeader>
      <CardContent>
        <div class="space-y-4">
          {email && (
            <div class="flex items-start gap-3">
              <Mail className="w-5 h-5 mt-1 text-muted-foreground" />
              <div>
                <p class="font-medium">Confirmation Email</p>
                <p class="text-muted-foreground">We've sent a confirmation email to {email}</p>
              </div>
            </div>
          )}
          {subscriptionDetails && (
            <>
              <div class="flex items-start gap-3">
                <Calendar className="w-5 h-5 mt-1 text-muted-foreground" />
                <div>
                  <p class="font-medium">Subscription Plan</p>
                  <p class="text-muted-foreground">
                    {typeof subscriptionDetails.items.data[0]?.price?.product === 'object' && 
                     'name' in subscriptionDetails.items.data[0].price.product ? 
                     subscriptionDetails.items.data[0].price.product.name : ''} - 
                    {subscriptionDetails.items.data[0]?.price?.unit_amount ? 
                     new Intl.NumberFormat('en-US', {
                       style: 'currency',
                       currency: subscriptionDetails.currency
                     }).format(subscriptionDetails.items.data[0].price.unit_amount / 100) : ''}
                    /{subscriptionDetails.items.data[0]?.price?.recurring?.interval || ''}
                  </p>
                </div>
              </div>
              <div class="flex items-start gap-3">
                <Calendar className="w-5 h-5 mt-1 text-muted-foreground" />
                <div>
                  <p class="font-medium">Billing Period</p>
                  <p class="text-muted-foreground">
                    Current period: {new Date(subscriptionDetails.current_period_start * 1000).toLocaleDateString()} - 
                    {new Date(subscriptionDetails.current_period_end * 1000).toLocaleDateString()}
                  </p>
                </div>
              </div>
              <div class="flex items-start gap-3">
                <Calendar className="w-5 h-5 mt-1 text-muted-foreground" />
                <div>
                  <p class="font-medium">Payment Status</p>
                  <p class="text-muted-foreground">
                    {subscriptionDetails?.latest_invoice && 
                     subscriptionDetails.latest_invoice &&
                     typeof subscriptionDetails.latest_invoice === 'object' &&
                     'payment_intent' in subscriptionDetails.latest_invoice &&
                     subscriptionDetails.latest_invoice.payment_intent &&
                     typeof subscriptionDetails.latest_invoice.payment_intent === 'object' &&
                     'status' in subscriptionDetails.latest_invoice.payment_intent &&
                     subscriptionDetails.latest_invoice.payment_intent.status === 'succeeded'
                      ? 'Payment successful' 
                      : 'Payment processing'}
                  </p>
                </div>
              </div>
            </>
          )}
        </div>
      </CardContent>
    </Card>

    {/* Next Steps */}
    <Card>
      <CardHeader>
        <h2 class="text-2xl font-semibold">Next Steps</h2>
      </CardHeader>
      <CardContent>
        <ul class="space-y-4">
          <li class="flex items-start gap-3">
            <div class="flex-shrink-0 w-6 h-6 rounded-full bg-primary/10 flex items-center justify-center">
              <span class="text-sm font-medium text-primary">1</span>
            </div>
            <div>
              <p class="font-medium">Explore Your Dashboard</p>
              <p class="text-muted-foreground">Access all your premium features and start exploring ONE's capabilities</p>
            </div>
          </li>
          <li class="flex items-start gap-3">
            <div class="flex-shrink-0 w-6 h-6 rounded-full bg-primary/10 flex items-center justify-center">
              <span class="text-sm font-medium text-primary">2</span>
            </div>
            <div>
              <p class="font-medium">Check Your Email</p>
              <p class="text-muted-foreground">Review your subscription details and keep them for your records</p>
            </div>
          </li>
          <li class="flex items-start gap-3">
            <div class="flex-shrink-0 w-6 h-6 rounded-full bg-primary/10 flex items-center justify-center">
              <span class="text-sm font-medium text-primary">3</span>
            </div>
            <div>
              <p class="font-medium">Get Started</p>
              <p class="text-muted-foreground">Begin your journey with ONE and discover how we can help you achieve more</p>
            </div>
          </li>
        </ul>
      </CardContent>
      <CardFooter>
        <div class="flex justify-center w-full">
          <a href="/portal" class="inline-flex items-center">
            <Button variant="default" size="lg" className="gap-2">
              Go to Dashboard
              <ArrowRight className="w-4 h-4" />
            </Button>
          </a>
        </div>
      </CardFooter>
    </Card>
  </div>
</Layout>
